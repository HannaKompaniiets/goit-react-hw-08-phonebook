{"version":3,"file":"static/js/728.002e6d27.chunk.js","mappings":"kNACA,EAA8B,4BAA9B,EAAyE,6BCA5DA,EAAe,SAAC,GAAD,SAAGC,MAAH,EAEfC,EAAyB,SAAC,GAAqC,IAAvBC,EAAsB,EAAlCC,SAAYD,MAASF,EAAa,EAAbA,OAC5D,OAAKA,EAGEE,EAAMF,QAAO,SAAAI,GAAI,OACtBA,EAAKC,KAAKC,cAAcC,SAASP,EAAOM,cADlB,IAFfJ,CAKV,EAGYM,EAAkB,SAAAC,GAAK,OAAIA,EAAMN,SAASO,SAAnB,EACvBC,EAAc,SAAAF,GAAK,OAAIA,EAAMN,SAASS,KAAnB,E,mBCShC,EAlBe,WACb,IAAMC,GAAWC,EAAAA,EAAAA,MAEXd,GAASe,EAAAA,EAAAA,IAAYhB,GAE3B,OACE,mBAAOiB,UAAWC,EAAlB,UAAmC,yBAEjC,kBACED,UAAWC,EACXC,SAAU,SAAAC,GAAC,OAAIN,GAASO,EAAAA,EAAAA,GAAUD,EAAEE,OAAOC,OAAhC,EACXC,KAAK,OACLD,MAAOtB,MAId,ECpBD,EAA+B,mCAA/B,EAAiF,mCAAjF,EAAoI,oCAApI,EAAwL,oC,SC4BxL,EAxBoB,WAClB,IAAMG,GAAWY,EAAAA,EAAAA,IAAYd,GACvBY,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAIE,UAAWC,EAAf,SACGd,EAASqB,KAAI,gBAAGC,EAAH,EAAGA,GAAIpB,EAAP,EAAOA,KAAMqB,EAAb,EAAaA,OAAb,OACZ,gBAAIV,UAAWC,EAAf,WACE,eAAGD,UAAWC,EAAd,UACGZ,EAAK,MAAIqB,MAEZ,mBACEV,UAAWC,EACXM,KAAK,SACLI,QAAS,kBAAMd,GAASe,EAAAA,EAAAA,IAAcH,GAA7B,EAHX,SAIC,aARmCA,EAD1B,KAgBnB,E,oBCMD,EAxBiB,WACX,IAAMZ,GAAWC,EAAAA,EAAAA,MACXX,GAAWY,EAAAA,EAAAA,IAAYd,GACvBS,GAAYK,EAAAA,EAAAA,IAAYP,GACxBI,GAAQG,EAAAA,EAAAA,IAAYJ,GAM5B,OAJEkB,EAAAA,EAAAA,YAAU,WACRhB,GAASiB,EAAAA,EAAAA,MACV,GAAE,CAACjB,KAGJ,2BACG,KACD,wBAAI,eACJ,SAAC,EAAAkB,KAAD,IACCrB,IAAa,SAACsB,EAAA,EAAD,IACbpB,IAAS,2BAAK,iCAA+BA,EAAMqB,YACpD,wBAAI,cACJ,SAAC,EAAD,IACC9B,EAAS+B,QAAS,SAAC,EAAD,KAAkB,uBAAG,wBAG/C,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/filter/filter.module.css?56b3","redux/selectors.js","components/filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/new_contact/new_contacts.module.css?6e62","components/new_contact/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"label_title\":\"filter_label_title__jLv6t\",\"filter_input\":\"filter_filter_input__sm3MV\"};","export const selectContacts = state => state.contacts.items;\nexport const selectFilter = ({ filter }) => filter;\n\nexport const selectFilteredContacts = ({ contacts: { items }, filter }) => {\n  if (!filter) {\n    return items;\n  }\n  return items.filter(item =>\n    item.name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n\n\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;","import { useDispatch, useSelector } from 'react-redux';\nimport css from './filter.module.css';\nimport { selectFilter} from 'redux/selectors';\nimport { setFilter } from 'redux/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  \n  const filter = useSelector(selectFilter);\n\n  return (\n    <label className={css.label_title}>\n      Find contact by name:\n      <input\n        className={css.filter_input}\n        onChange={e => dispatch(setFilter(e.target.value))}\n        type=\"name\"\n        value={filter}\n      ></input>\n    </label>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"contact_list\":\"new_contacts_contact_list__5Nx0C\",\"contact_item\":\"new_contacts_contact_item__xOkk5\",\"contact_title\":\"new_contacts_contact_title__zuUbk\",\"button_delete\":\"new_contacts_button_delete__tiFYV\"};","import css from './new_contacts.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\nimport { selectFilteredContacts } from 'redux/selectors';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectFilteredContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <ul className={css.contact_list}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={css.contact_item} key={id}>\n          <p className={css.contact_title}>\n            {name} : {number}\n          </p>\n          <button\n            className={css.button_delete}\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import Loader from \"components/Loader/Loader\";\nimport Filter from \"components/filter/Filter\";\nimport ContactList from \"components/new_contact/ContactList\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Form } from \"react-router-dom\";\nimport { fetchContacts } from \"redux/operations\";\nimport { selectError, selectFilteredContacts, selectIsLoading } from \"redux/selectors\";\n\nconst Contacts = () => {\n      const dispatch = useDispatch();\n      const contacts = useSelector(selectFilteredContacts);\n      const isLoading = useSelector(selectIsLoading);\n      const error = useSelector(selectError);\n    \n      useEffect(() => {\n        dispatch(fetchContacts());\n      }, [dispatch]);\n    \n    return (\n      <div>\n        {' '}\n        <h2>Phonebook</h2>\n        <Form />\n        {isLoading && <Loader />}\n        {error && <div>Oopps, something went wrong...{error.message}</div>}\n        <h2>Contacts</h2>\n        <Filter />\n        {contacts.length ? <ContactList /> : <p>Contact not found</p>}\n      </div>\n    );\n};\n\nexport default Contacts;\n"],"names":["selectFilter","filter","selectFilteredContacts","items","contacts","item","name","toLowerCase","includes","selectIsLoading","state","isLoading","selectError","error","dispatch","useDispatch","useSelector","className","css","onChange","e","setFilter","target","value","type","map","id","number","onClick","deleteContact","useEffect","fetchContacts","Form","Loader","message","length"],"sourceRoot":""}